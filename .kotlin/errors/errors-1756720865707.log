kotlin version: 2.1.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/admin/Documents/SoftmareDevelopment/Code/AndroidStudioProjeck/VPropTraderPro/platforms/android/app/src/main/java/com/futureharvest/vproptrader/TradingAccountPurchaseScreen.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:55)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:42)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:28)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:192)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.runBackend(jvmCompilerPipeline.kt:80)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModule(jvmCompilerPipelineLightTree.kt:264)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileSingleModuleUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:231)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:86)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:146)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:102)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:316)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:674)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1659)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:TradingAccountPurchaseScreen visibility:public modality:FINAL <> (viewModel:com.futureharvest.vproptrader.TradingAccountViewModel, onProductSelected:kotlin.Function1<com.futureharvest.vproptrader.BillingManager.TradingAccountProduct, kotlin.Unit>, onBackPressed:kotlin.Function0<kotlin.Unit>) returnType:kotlin.Unit
  annotations:
    OptIn(markerClass = [CLASS_REFERENCE 'CLASS IR_EXTERNAL_DECLARATION_STUB ANNOTATION_CLASS name:ExperimentalMaterial3Api modality:OPEN visibility:public superTypes:[kotlin.Annotation]' type=kotlin.reflect.KClass<androidx.compose.material3.ExperimentalMaterial3Api>] type=kotlin.Array<out kotlin.reflect.KClass<out kotlin.Annotation>> varargElementType=kotlin.reflect.KClass<out kotlin.Annotation>)
    Composable
  VALUE_PARAMETER name:viewModel index:0 type:com.futureharvest.vproptrader.TradingAccountViewModel
  VALUE_PARAMETER name:onProductSelected index:1 type:kotlin.Function1<com.futureharvest.vproptrader.BillingManager.TradingAccountProduct, kotlin.Unit>
  VALUE_PARAMETER name:onBackPressed index:2 type:kotlin.Function0<kotlin.Unit>
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:products$delegate type:androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?> [val]
      CALL 'public final fun observeAsState <R, T> (initial: R of androidx.compose.runtime.livedata.LiveDataAdapterKt.observeAsState): androidx.compose.runtime.State<R of androidx.compose.runtime.livedata.LiveDataAdapterKt.observeAsState> declared in androidx.compose.runtime.livedata.LiveDataAdapterKt' type=androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?> origin=null
        <R>: @[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?
        <T>: @[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableList<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?
        $receiver: BLOCK type=androidx.lifecycle.MutableLiveData<@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableList<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?> origin=null
          VAR IR_TEMPORARY_VARIABLE name:tmp0 type:kotlin.Any? [val]
            GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:products type:@[FlexibleNullability] androidx.lifecycle.MutableLiveData<@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableList<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?>? visibility:public [final] declared in com.futureharvest.vproptrader.TradingAccountViewModel' type=@[FlexibleNullability] androidx.lifecycle.MutableLiveData<@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableList<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?>? superQualifierSymbol=com.futureharvest.vproptrader.TradingAccountViewModel origin=null
              receiver: GET_VAR 'viewModel: com.futureharvest.vproptrader.TradingAccountViewModel declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=com.futureharvest.vproptrader.TradingAccountViewModel origin=null
          CALL 'public final fun checkNotNullExpressionValue (value: kotlin.Any?, expression: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
            value: GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=kotlin.Any? origin=null
            expression: CONST String type=kotlin.String value="products"
          GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=kotlin.Any? origin=null
        initial: CALL 'public final fun emptyList <T> (): kotlin.collections.List<T of kotlin.collections.CollectionsKt.emptyList> declared in kotlin.collections.CollectionsKt' type=kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?> origin=null
          <T>: @[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?
    VAR PROPERTY_DELEGATE name:isLoading$delegate type:androidx.compose.runtime.State<@[FlexibleNullability] kotlin.Boolean?> [val]
      CALL 'public final fun observeAsState <R, T> (initial: R of androidx.compose.runtime.livedata.LiveDataAdapterKt.observeAsState): androidx.compose.runtime.State<R of androidx.compose.runtime.livedata.LiveDataAdapterKt.observeAsState> declared in androidx.compose.runtime.livedata.LiveDataAdapterKt' type=androidx.compose.runtime.State<@[FlexibleNullability] kotlin.Boolean?> origin=null
        <R>: @[FlexibleNullability] kotlin.Boolean?
        <T>: @[FlexibleNullability] kotlin.Boolean?
        $receiver: BLOCK type=androidx.lifecycle.MutableLiveData<@[FlexibleNullability] kotlin.Boolean?> origin=null
          VAR IR_TEMPORARY_VARIABLE name:tmp1 type:kotlin.Any? [val]
            GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:isLoading type:@[FlexibleNullability] androidx.lifecycle.MutableLiveData<@[FlexibleNullability] kotlin.Boolean?>? visibility:public [final] declared in com.futureharvest.vproptrader.TradingAccountViewModel' type=@[FlexibleNullability] androidx.lifecycle.MutableLiveData<@[FlexibleNullability] kotlin.Boolean?>? superQualifierSymbol=com.futureharvest.vproptrader.TradingAccountViewModel origin=null
              receiver: GET_VAR 'viewModel: com.futureharvest.vproptrader.TradingAccountViewModel declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=com.futureharvest.vproptrader.TradingAccountViewModel origin=null
          CALL 'public final fun checkNotNullExpressionValue (value: kotlin.Any?, expression: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
            value: GET_VAR 'val tmp1: kotlin.Any? [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=kotlin.Any? origin=null
            expression: CONST String type=kotlin.String value="isLoading"
          GET_VAR 'val tmp1: kotlin.Any? [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=kotlin.Any? origin=null
        initial: CONST Boolean type=kotlin.Boolean value=false
    VAR PROPERTY_DELEGATE name:errorMessage$delegate type:androidx.compose.runtime.State<kotlin.String?> [val]
      CALL 'public final fun observeAsState <T> (): androidx.compose.runtime.State<T of androidx.compose.runtime.livedata.LiveDataAdapterKt.observeAsState?> declared in androidx.compose.runtime.livedata.LiveDataAdapterKt' type=androidx.compose.runtime.State<kotlin.String?> origin=null
        <T>: @[FlexibleNullability] kotlin.String?
        $receiver: BLOCK type=androidx.lifecycle.MutableLiveData<@[FlexibleNullability] kotlin.String?> origin=null
          VAR IR_TEMPORARY_VARIABLE name:tmp2 type:kotlin.Any? [val]
            GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:errorMessage type:@[FlexibleNullability] androidx.lifecycle.MutableLiveData<@[FlexibleNullability] kotlin.String?>? visibility:public [final] declared in com.futureharvest.vproptrader.TradingAccountViewModel' type=@[FlexibleNullability] androidx.lifecycle.MutableLiveData<@[FlexibleNullability] kotlin.String?>? superQualifierSymbol=com.futureharvest.vproptrader.TradingAccountViewModel origin=null
              receiver: GET_VAR 'viewModel: com.futureharvest.vproptrader.TradingAccountViewModel declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=com.futureharvest.vproptrader.TradingAccountViewModel origin=null
          CALL 'public final fun checkNotNullExpressionValue (value: kotlin.Any?, expression: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
            value: GET_VAR 'val tmp2: kotlin.Any? [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=kotlin.Any? origin=null
            expression: CONST String type=kotlin.String value="errorMessage"
          GET_VAR 'val tmp2: kotlin.Any? [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=kotlin.Any? origin=null
    CALL 'public final fun Column$default (modifier: androidx.compose.ui.Modifier?, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.ColumnKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: CALL 'public final fun padding-3ABfNKs (all: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.ui.Modifier origin=null
        $receiver: CALL 'public final fun fillMaxSize$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
          fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
        all: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          $receiver: CONST Int type=kotlin.Int value=16
      verticalArrangement: COMPOSITE type=androidx.compose.foundation.layout.Arrangement.Vertical? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.foundation.layout.Arrangement.Vertical? value=null
      horizontalAlignment: COMPOSITE type=androidx.compose.ui.Alignment.Horizontal? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Alignment.Horizontal? value=null
      content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun TradingAccountPurchaseScreen$lambda$12 ($onBackPressed: kotlin.Function0<kotlin.Unit>, $errorMessage$delegate: androidx.compose.runtime.State<kotlin.String?>, $isLoading$delegate: androidx.compose.runtime.State<@[FlexibleNullability] kotlin.Boolean?>, $products$delegate: androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?>, $onProductSelected: kotlin.Function1<com.futureharvest.vproptrader.BillingManager.TradingAccountProduct, kotlin.Unit>): kotlin.Unit declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.ColumnScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          $onBackPressed: GET_VAR 'onBackPressed: kotlin.Function0<kotlin.Unit> declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=kotlin.Function0<kotlin.Unit> origin=null
          $errorMessage$delegate: GET_VAR 'val errorMessage$delegate: androidx.compose.runtime.State<kotlin.String?> [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=androidx.compose.runtime.State<kotlin.String?> origin=null
          $isLoading$delegate: GET_VAR 'val isLoading$delegate: androidx.compose.runtime.State<@[FlexibleNullability] kotlin.Boolean?> [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=androidx.compose.runtime.State<@[FlexibleNullability] kotlin.Boolean?> origin=null
          $products$delegate: GET_VAR 'val products$delegate: androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?> [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?> origin=null
          $onProductSelected: GET_VAR 'onProductSelected: kotlin.Function1<com.futureharvest.vproptrader.BillingManager.TradingAccountProduct, kotlin.Unit> declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen' type=kotlin.Function1<com.futureharvest.vproptrader.BillingManager.TradingAccountProduct, kotlin.Unit> origin=null
      $mask0: CONST Int type=kotlin.Int value=6
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:407)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:424)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:52)
	... 45 more
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN INLINE_LAMBDA name:TradingAccountPurchaseScreen$lambda$12 visibility:private modality:FINAL <> ($receiver:androidx.compose.foundation.layout.ColumnScope, $onBackPressed:kotlin.Function0<kotlin.Unit>, $errorMessage$delegate:androidx.compose.runtime.State<kotlin.String?>, $isLoading$delegate:androidx.compose.runtime.State<@[FlexibleNullability] kotlin.Boolean?>, $products$delegate:androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?>, $onProductSelected:kotlin.Function1<com.futureharvest.vproptrader.BillingManager.TradingAccountProduct, kotlin.Unit>) returnType:kotlin.Unit
  $receiver: VALUE_PARAMETER name:$this$Column type:androidx.compose.foundation.layout.ColumnScope
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$onBackPressed index:0 type:kotlin.Function0<kotlin.Unit>
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$errorMessage$delegate index:1 type:androidx.compose.runtime.State<kotlin.String?>
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$isLoading$delegate index:2 type:androidx.compose.runtime.State<@[FlexibleNullability] kotlin.Boolean?>
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$products$delegate index:3 type:androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?>
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$onProductSelected index:4 type:kotlin.Function1<com.futureharvest.vproptrader.BillingManager.TradingAccountProduct, kotlin.Unit>
  BLOCK_BODY
    VAR name:$i$a$-Column$default-TradingAccountPurchaseScreenKt$TradingAccountPurchaseScreen$1 type:kotlin.Int [val]
      CONST Int type=kotlin.Int value=0
    CALL 'public final fun Row$default (modifier: androidx.compose.ui.Modifier?, horizontalArrangement: androidx.compose.foundation.layout.Arrangement.Horizontal?, verticalAlignment: androidx.compose.ui.Alignment.Vertical?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.RowKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: CALL 'public final fun padding-qDBjuR0$default (start: androidx.compose.ui.unit.Dp, top: androidx.compose.ui.unit.Dp, end: androidx.compose.ui.unit.Dp, bottom: androidx.compose.ui.unit.Dp, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.PaddingKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
        $receiver: CALL 'public final fun fillMaxWidth$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
          fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
        start: COMPOSITE type=androidx.compose.ui.unit.Dp origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.Dp origin=null
            <T>: kotlin.Float
            <R>: androidx.compose.ui.unit.Dp
            v: CONST Float type=kotlin.Float value=0.0
        top: COMPOSITE type=androidx.compose.ui.unit.Dp origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.Dp origin=null
            <T>: kotlin.Float
            <R>: androidx.compose.ui.unit.Dp
            v: CONST Float type=kotlin.Float value=0.0
        end: COMPOSITE type=androidx.compose.ui.unit.Dp origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.Dp origin=null
            <T>: kotlin.Float
            <R>: androidx.compose.ui.unit.Dp
            v: CONST Float type=kotlin.Float value=0.0
        bottom: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          $receiver: CONST Int type=kotlin.Int value=16
        $mask0: CONST Int type=kotlin.Int value=7
        $handler: CONST Null type=kotlin.Any? value=null
      horizontalArrangement: COMPOSITE type=androidx.compose.foundation.layout.Arrangement.Horizontal? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.foundation.layout.Arrangement.Horizontal? value=null
      verticalAlignment: CALL 'public final fun <get-CenterVertically> (): androidx.compose.ui.Alignment.Vertical declared in androidx.compose.ui.Alignment.Companion' type=androidx.compose.ui.Alignment.Vertical origin=GET_PROPERTY
        $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Alignment.Companion visibility:public [final,static] declared in androidx.compose.ui.Alignment' type=androidx.compose.ui.Alignment.Companion origin=null
      content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun TradingAccountPurchaseScreen$lambda$12$lambda$4 ($onBackPressed: kotlin.Function0<kotlin.Unit>): kotlin.Unit declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          $onBackPressed: GET_VAR '$onBackPressed: kotlin.Function0<kotlin.Unit> declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen$lambda$12' type=kotlin.Function0<kotlin.Unit> origin=null
      $mask0: CONST Int type=kotlin.Int value=2
      $handler: CONST Null type=kotlin.Any? value=null
    COMPOSITE type=kotlin.Unit origin=null
      BLOCK type=kotlin.Unit? origin=FOLDED_SAFE_CALL
        WHEN type=kotlin.Unit? origin=FOLDED_SAFE_CALL
          BRANCH
            if: COMPOSITE type=kotlin.Boolean origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.String? [val]
                CALL 'private final fun TradingAccountPurchaseScreen$lambda$2 ($errorMessage$delegate: androidx.compose.runtime.State<kotlin.String?>): kotlin.String? declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt' type=kotlin.String? origin=GET_LOCAL_PROPERTY
                  $errorMessage$delegate: GET_VAR '$errorMessage$delegate: androidx.compose.runtime.State<kotlin.String?> declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen$lambda$12' type=androidx.compose.runtime.State<kotlin.String?> origin=null
              CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: GET_VAR 'val tmp0_safe_receiver: kotlin.String? [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen$lambda$12' type=kotlin.String? origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
            then: CALL 'public final fun let <T, R> (block: kotlin.Function1<T of kotlin.StandardKt.let, R of kotlin.StandardKt.let>): R of kotlin.StandardKt.let [inline] declared in kotlin.StandardKt' type=kotlin.Unit origin=null
              <T>: kotlin.String
              <R>: kotlin.Unit
              $receiver: GET_VAR 'val tmp0_safe_receiver: kotlin.String? [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen$lambda$12' type=kotlin.String? origin=null
              block: BLOCK type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
                COMPOSITE type=kotlin.Unit origin=null
                FUNCTION_REFERENCE 'private final fun TradingAccountPurchaseScreen$lambda$12$lambda$6 (error: kotlin.String): kotlin.Unit declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt' type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONST Null type=kotlin.Nothing? value=null
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'private final fun TradingAccountPurchaseScreen$lambda$1 ($isLoading$delegate: androidx.compose.runtime.State<@[FlexibleNullability] kotlin.Boolean?>): @[FlexibleNullability] kotlin.Boolean? declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt' type=@[FlexibleNullability] kotlin.Boolean? origin=GET_LOCAL_PROPERTY
          $isLoading$delegate: GET_VAR '$isLoading$delegate: androidx.compose.runtime.State<@[FlexibleNullability] kotlin.Boolean?> declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen$lambda$12' type=androidx.compose.runtime.State<@[FlexibleNullability] kotlin.Boolean?> origin=null
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public final fun Box$default (modifier: androidx.compose.ui.Modifier?, contentAlignment: androidx.compose.ui.Alignment?, propagateMinConstraints: kotlin.Boolean, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
            modifier: CALL 'public final fun fillMaxWidth$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
              $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
              fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              $mask0: CONST Int type=kotlin.Int value=1
              $handler: CONST Null type=kotlin.Any? value=null
            contentAlignment: CALL 'public final fun <get-Center> (): androidx.compose.ui.Alignment declared in androidx.compose.ui.Alignment.Companion' type=androidx.compose.ui.Alignment origin=GET_PROPERTY
              $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Alignment.Companion visibility:public [final,static] declared in androidx.compose.ui.Alignment' type=androidx.compose.ui.Alignment.Companion origin=null
            propagateMinConstraints: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
              CONST Boolean type=kotlin.Boolean value=false
            content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=LAMBDA
              COMPOSITE type=kotlin.Unit origin=null
              FUNCTION_REFERENCE 'private final fun TradingAccountPurchaseScreen$lambda$12$lambda$7 (): kotlin.Unit declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
            $mask0: CONST Int type=kotlin.Int value=4
            $handler: CONST Null type=kotlin.Any? value=null
      BRANCH
        if: CONST Boolean type=kotlin.Boolean value=true
        then: BLOCK type=kotlin.Unit origin=null
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL 'public final fun isNotEmpty <T> (): kotlin.Boolean [inline] declared in kotlin.collections.CollectionsKt' type=kotlin.Boolean origin=null
                <T>: @[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?
                $receiver: BLOCK type=kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?> origin=null
                  VAR IR_TEMPORARY_VARIABLE name:tmp0 type:kotlin.Any? [val]
                    CALL 'private final fun TradingAccountPurchaseScreen$lambda$0 ($products$delegate: androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?>): @[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>? declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt' type=@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>? origin=GET_LOCAL_PROPERTY
                      $products$delegate: GET_VAR '$products$delegate: androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?> declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen$lambda$12' type=androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?> origin=null
                  CALL 'public final fun checkNotNullExpressionValue (value: kotlin.Any?, expression: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
                    value: GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen$lambda$12' type=kotlin.Any? origin=null
                    expression: CONST String type=kotlin.String value="TradingAccountPurchaseScreen$lambda$0(...)"
                  GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen$lambda$12' type=kotlin.Any? origin=null
              then: BLOCK type=kotlin.Unit origin=null
                CALL 'public final fun LazyColumn$default (modifier: androidx.compose.ui.Modifier?, state: androidx.compose.foundation.lazy.LazyListState?, contentPadding: androidx.compose.foundation.layout.PaddingValues?, reverseLayout: kotlin.Boolean, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, flingBehavior: androidx.compose.foundation.gestures.FlingBehavior?, userScrollEnabled: kotlin.Boolean, content: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.foundation.lazy.LazyDslKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
                  modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
                    CONST Null type=androidx.compose.ui.Modifier? value=null
                  state: COMPOSITE type=androidx.compose.foundation.lazy.LazyListState? origin=DEFAULT_VALUE
                    CONST Null type=androidx.compose.foundation.lazy.LazyListState? value=null
                  contentPadding: COMPOSITE type=androidx.compose.foundation.layout.PaddingValues? origin=DEFAULT_VALUE
                    CONST Null type=androidx.compose.foundation.layout.PaddingValues? value=null
                  reverseLayout: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
                    CONST Boolean type=kotlin.Boolean value=false
                  verticalArrangement: CALL 'public final fun spacedBy-0680j_4 (space: androidx.compose.ui.unit.Dp): androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical declared in androidx.compose.foundation.layout.Arrangement' type=androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical origin=null
                    $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:androidx.compose.foundation.layout.Arrangement visibility:public [final,static] declared in androidx.compose.foundation.layout.Arrangement' type=androidx.compose.foundation.layout.Arrangement origin=null
                    space: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
                      $receiver: CONST Int type=kotlin.Int value=12
                  horizontalAlignment: COMPOSITE type=androidx.compose.ui.Alignment.Horizontal? origin=DEFAULT_VALUE
                    CONST Null type=androidx.compose.ui.Alignment.Horizontal? value=null
                  flingBehavior: COMPOSITE type=androidx.compose.foundation.gestures.FlingBehavior? origin=DEFAULT_VALUE
                    CONST Null type=androidx.compose.foundation.gestures.FlingBehavior? value=null
                  userScrollEnabled: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
                    CONST Boolean type=kotlin.Boolean value=false
                  content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> origin=LAMBDA
                    COMPOSITE type=kotlin.Unit origin=null
                    CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> origin=null
                      <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit>
                      dynamicCall: CALL 'public final fun invoke (p0: androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?>, p1: kotlin.Function1<com.futureharvest.vproptrader.BillingManager.TradingAccountProduct, kotlin.Unit>): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> origin=null
                        p0: GET_VAR '$products$delegate: androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?> declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen$lambda$12' type=androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?> origin=null
                        p1: GET_VAR '$onProductSelected: kotlin.Function1<com.futureharvest.vproptrader.BillingManager.TradingAccountProduct, kotlin.Unit> declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt.TradingAccountPurchaseScreen$lambda$12' type=kotlin.Function1<com.futureharvest.vproptrader.BillingManager.TradingAccountProduct, kotlin.Unit> origin=null
                      bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                        tag: CONST Int type=kotlin.Int value=6
                        owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
                        name: CONST String type=kotlin.String value="metafactory"
                        descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
                        isInterface: CONST Boolean type=kotlin.Boolean value=false
                      bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
                        CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                          method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
                        RAW_FUNCTION_REFERENCE 'private final fun TradingAccountPurchaseScreen$lambda$12$lambda$9 ($products$delegate: androidx.compose.runtime.State<@[FlexibleNullability] kotlin.collections.List<@[FlexibleNullability] com.futureharvest.vproptrader.BillingManager.TradingAccountProduct?>?>, $onProductSelected: kotlin.Function1<com.futureharvest.vproptrader.BillingManager.TradingAccountProduct, kotlin.Unit>, $this$LazyColumn: androidx.compose.foundation.lazy.LazyListScope): kotlin.Unit? declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt' type=kotlin.Any
                        CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                          method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.foundation.lazy.LazyListScope): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
                  $mask0: CONST Int type=kotlin.Int value=239
                  $handler: CONST Null type=kotlin.Any? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: BLOCK type=kotlin.Unit origin=null
                CALL 'public final fun Box$default (modifier: androidx.compose.ui.Modifier?, contentAlignment: androidx.compose.ui.Alignment?, propagateMinConstraints: kotlin.Boolean, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
                  modifier: CALL 'public final fun fillMaxSize$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
                    $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
                    fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                      CONST Float type=kotlin.Float value=0.0
                    $mask0: CONST Int type=kotlin.Int value=1
                    $handler: CONST Null type=kotlin.Any? value=null
                  contentAlignment: CALL 'public final fun <get-Center> (): androidx.compose.ui.Alignment declared in androidx.compose.ui.Alignment.Companion' type=androidx.compose.ui.Alignment origin=GET_PROPERTY
                    $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Alignment.Companion visibility:public [final,static] declared in androidx.compose.ui.Alignment' type=androidx.compose.ui.Alignment.Companion origin=null
                  propagateMinConstraints: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
                    CONST Boolean type=kotlin.Boolean value=false
                  content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=LAMBDA
                    COMPOSITE type=kotlin.Unit origin=null
                    FUNCTION_REFERENCE 'private final fun TradingAccountPurchaseScreen$lambda$12$lambda$11 (): kotlin.Unit declared in com.futureharvest.vproptrader.TradingAccountPurchaseScreenKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
                  $mask0: CONST Int type=kotlin.Int value=4
                  $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.generateLambdaBody(IrSourceCompilerForInline.kt:67)
	at org.jetbrains.kotlin.codegen.inline.ExpressionLambda.generateLambdaBody(LambdaInfo.kt:72)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genValueAndPut(IrInlineCodegen.kt:100)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall$handleParameter(ExpressionCodegen.kt:561)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:589)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:529)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:236)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 55 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun Row$default (modifier: androidx.compose.ui.Modifier?, horizontalArrangement: androidx.compose.foundation.layout.Arrangement.Horizontal?, verticalAlignment: androidx.compose.ui.Alignment.Vertical?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.RowKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:598)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:529)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:236)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 69 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/foundation/layout/RowKt;.Row$default(Landroidx/compose/ui/Modifier;Landroidx/compose/foundation/layout/Arrangement$Horizontal;Landroidx/compose/ui/Alignment$Vertical;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 81 more


